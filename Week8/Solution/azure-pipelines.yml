trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  displayName: 'Checkout Code'

- script: |
    npm install
    npm test || echo "TestsFailed=1" >> $GITHUB_ENV
  displayName: 'Build and Test'
  continueOnError: true

- script: |
    echo "Deploying application..."
    START_TIME=$(date +%s)
    sleep 5  # Simulate deployment
    END_TIME=$(date +%s)
    echo "LeadTimeMinutes=$(( (END_TIME - START_TIME) / 60 ))" >> $GITHUB_ENV
    echo "Availability=99" >> $GITHUB_ENV
  displayName: 'Deploy Application'
  condition: eq(variables['TestsFailed'], '')

- script: |
    echo "Scanning for vulnerabilities..."
    echo "ChangeFailureRate=5" >> $GITHUB_ENV
    echo "DefectEscapeRate=1" >> $GITHUB_ENV
  displayName: 'Security Scan'
  condition: succeeded()

- script: |
    echo "Simulating failure and recovery..."
    START_FAIL=$(date +%s)
    sleep 3  # Simulate failure duration
    END_FAIL=$(date +%s)
    echo "MTTRMinutes=$(( (END_FAIL - START_FAIL) / 60 ))" >> $GITHUB_ENV
  displayName: 'Simulate Recovery'
  continueOnError: true

- script: |
    echo "Pipeline Metrics:"
    echo "LeadTimeMinutes=${{ variables.LeadTimeMinutes }}"
    echo "ChangeFailureRate=${{ variables.ChangeFailureRate }}"
    echo "MTTRMinutes=${{ variables.MTTRMinutes }}"
    echo "Availability=${{ variables.Availability }}"
    echo "DefectEscapeRate=${{ variables.DefectEscapeRate }}"
  displayName: 'Log Metrics'